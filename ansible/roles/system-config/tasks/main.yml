---
# Generated By: Cursor (Claude Sonnet 4)
# System configuration tasks

- name: Check if GNOME is available
  ansible.builtin.command: which gnome-shell
  register: gnome_check
  failed_when: false
  changed_when: false

- name: GNOME configuration block
  when: gnome_check.rc == 0
  block:
    - name: Disable idle activation for screensaver
      community.general.dconf:
        key: "/org/gnome/desktop/screensaver/idle-activation-enabled"
        value: "false"
        state: present

    - name: Set session idle delay to never (0)
      community.general.dconf:
        key: "/org/gnome/desktop/session/idle-delay"
        value: "uint32 0"
        state: present

    - name: Disable automatic suspend
      community.general.dconf:
        key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type"
        value: "'nothing'"
        state: present

    - name: Enable lock on manual suspend/screensaver (security)
      community.general.dconf:
        key: "/org/gnome/desktop/screensaver/lock-enabled"
        value: "true"
        state: present

    - name: Set immediate lock when screensaver activates
      community.general.dconf:
        key: "/org/gnome/desktop/screensaver/lock-delay"
        value: "uint32 0"
        state: present

    - name: Display GNOME settings configured
      ansible.builtin.debug:
        msg: |
          ✓ Screensaver idle activation disabled (no auto-lock)
          ✓ Session idle delay set to never (no timeout)
          ✓ Automatic suspend disabled (VM stays active)
          ✓ Lock enabled on manual suspend/screensaver (security)
          ✓ Immediate lock when screensaver activates (security)

- name: GNOME not available warning
  ansible.builtin.debug:
    msg: "WARNING: GNOME not detected. Screen lock settings skipped."
  when: gnome_check.rc != 0

- name: Check for GNOME extensions installation (validation only)
  ansible.builtin.shell: |
    if command -v gnome-extensions >/dev/null 2>&1; then
      gnome-extensions list
    else
      echo "gnome-extensions command not available"
    fi
  register: extensions_check
  failed_when: false
  changed_when: false

- name: Report GNOME extensions status
  ansible.builtin.debug:
    msg: |
      GNOME Extensions Status:
      {{ extensions_check.stdout if extensions_check.stdout else 'Unable to check extensions' }}

      Required extensions (install manually):
      {% for ext in gnome_extensions %}
      - {{ ext.name }}: {{ ext.url }}
      {% endfor %}
  when: gnome_check.rc == 0

- name: Ensure dconf database is updated
  ansible.builtin.command: dconf update
  changed_when: true
  when: gnome_check.rc == 0
  failed_when: false  # Allow to fail since user settings don't require system db updates

---
# Generated By: Cursor (Claude Sonnet 4)
# Samba file sharing tasks

- name: Install Samba packages
  ansible.builtin.dnf:
    name:
      - samba
      - samba-client
      - samba-common
    state: present
  become: true

- name: Create shared directory
  ansible.builtin.file:
    path: "{{ samba_share_path }}"
    state: directory
    mode: "0755"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- name: Set SELinux context for Samba share
  ansible.builtin.command: >
    semanage fcontext -a -t samba_share_t "{{ samba_share_path }}(/.*)?"
  become: true
  register: samba_selinux_context_result
  failed_when: false
  changed_when: samba_selinux_context_result.rc == 0

- name: Apply SELinux context
  ansible.builtin.command: restorecon -Rv "{{ samba_share_path }}"
  become: true
  changed_when: true

- name: Configure Samba global settings
  ansible.builtin.template:
    src: smb.conf.j2
    dest: /etc/samba/smb.conf
    mode: "0644"
    owner: root
    group: root
  become: true

- name: Validate Samba configuration
  ansible.builtin.command: testparm -s
  become: true
  register: samba_config_validation
  failed_when: samba_config_validation.rc != 0
  changed_when: false

- name: Restart Samba service after configuration
  ansible.builtin.systemd:
    name: smb
    state: restarted
  become: true
  when: samba_config_validation.rc == 0

# Check if Samba user exists
- name: Check if Samba user exists
  ansible.builtin.shell: "pdbedit -L | grep -q '^{{ user_name }}:'"
  become: true
  register: samba_user_exists
  failed_when: false
  changed_when: false

# Create Samba user account only if it doesn't exist
- name: Create Samba user account
  ansible.builtin.command: >
    echo '{{ samba_initial_password }}' | smbpasswd -a {{ user_name }} -s
  become: true
  register: samba_user_result
  failed_when: samba_user_result.rc != 0
  changed_when: samba_user_result.rc == 0
  when: samba_user_exists.rc != 0

# Note: User is created with initial password from config.
# You can change it later using:
# sudo smbpasswd username
# This creates a separate Samba password for network access

- name: Enable Samba services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  become: true
  loop:
    - smb
    - nmb

- name: Configure firewall for Samba
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
  become: true
  loop:
    - "139/tcp"
    - "445/tcp"
  notify: Reload Firewalld

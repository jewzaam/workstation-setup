---
# Generated By: Cursor (Claude Sonnet 4)
# Package installation tasks

- name: Install essential packages via dnf
  ansible.builtin.dnf:
    name: "{{ essential_packages }}"
    state: present
  register: package_install_result

- name: Display installed packages
  ansible.builtin.debug:
    msg: "Installed packages: {{ essential_packages | join(', ') }}"
  when: package_install_result is succeeded

- name: Check if Cursor is already installed
  ansible.builtin.stat:
    path: "{{ cursor_install_dir }}/cursor.AppImage"
  register: cursor_installed

- name: Create Cursor installation directory
  ansible.builtin.file:
    path: "{{ cursor_install_dir }}"
    state: directory
    mode: "0755"
  when: not cursor_installed.stat.exists

- name: Get Cursor download URL from API
  ansible.builtin.uri:
    url: "{{ cursor_api_url }}"
    method: GET
    return_content: true
  register: cursor_api_response
  when: not cursor_installed.stat.exists

- name: Download Cursor AppImage
  ansible.builtin.get_url:
    url: "{{ cursor_api_response.json.downloadUrl }}"
    dest: "{{ cursor_install_dir }}/cursor.AppImage"
    mode: "0755"
    timeout: 300
    headers:
      User-Agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36"
  when: not cursor_installed.stat.exists
  register: cursor_download

- name: Create Cursor desktop entry
  ansible.builtin.copy:
    content: |
      [Desktop Entry]
      Name=Cursor
      Comment=AI-powered code editor
      Exec={{ cursor_install_dir }}/cursor.AppImage %F
      Icon={{ cursor_install_dir }}/cursor.AppImage
      Terminal=false
      Type=Application
      Categories=Development;TextEditor;
      MimeType=text/plain;inode/directory;
      StartupWMClass=cursor
    dest: "{{ cursor_desktop_file }}"
    mode: "0644"
  when: cursor_download is succeeded

- name: Update desktop database
  ansible.builtin.command: update-desktop-database /usr/share/applications/
  when: cursor_download is succeeded
  changed_when: true

- name: Verify Go installation
  ansible.builtin.command: go version
  register: go_version_check
  changed_when: false
  failed_when: false

- name: Display Go version
  ansible.builtin.debug:
    msg: "Go version: {{ go_version_check.stdout }}"
  when: go_version_check.rc == 0

- name: Warn if Go installation failed
  ansible.builtin.debug:
    msg: "WARNING: Go installation verification failed. .bashrc exports may not work correctly."
  when: go_version_check.rc != 0
